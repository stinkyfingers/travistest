stages:
  # - kind
  # - minikube
  # - integration

sudo: required

jobs:
  include:
    # - stage: minikube
    #   sudo: required
    #   env:
    #     global:
    #       - CHANGE_MINIKUBE_NONE_USER=true
    #       - MINIKUBE_WANTUPDATENOTIFICATION=false
    #       - MINIKUBE_WANTREPORTERRORPROMPT=false
    #       - MINIKUBE_HOME=$HOME
    #       - KUBECONFIG=$HOME/.kube/config
    #   language: go
    #   go: 1.16.x
    #   dist: xenial
    #   before_install:
    #     - sudo apt-get -qq -y install conntrack
    #     - ./scripts/setup_minikube.sh $TRAVIS_COMMIT $KUBECONFIG
    #   # install: skip
    #   # script:
    #   #   - ./cli_tests/help.sh

    # - stage: kind
    #   sudo: required
    #   language: go
    #   go: 1.16.x
    #   services:
    #     - docker
    #   before_script:
    #     # - ./scripts/setup_kind.sh
    #     - curl -Lo kind https://github.com/kubernetes-sigs/kind/releases/download/0.0.1/kind-linux-amd64 && chmod +x kind && sudo mv kind /usr/local/bin/
    #     - kind create cluster --image "kindest/node:v1.21.1"
    #   script:
    #     - ./scripts/setup_ketch.sh $TRAVIS_COMMIT
    #     - ./cli_tests/help.sh

    # - stage: integration
    #   sudo: required
    #   dist: xenial
    #   language: go
    #   go: 1.16.x
    #   env:
    #     - CHANGE_MINIKUBE_NONE_USER=true
    #     - MINIKUBE_WANTUPDATENOTIFICATION=false
    #     - MINIKUBE_WANTREPORTERRORPROMPT=false
    #     - MINIKUBE_HOME=$HOME
    #     - KUBECONFIG=$HOME/.kube/config
    #   before_install:
    #     - sudo apt-get -qq -y install conntrack
    #   before_script:
    #     # Minikube
    #     - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.20.1/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
    #     - curl -Lo minikube https://storage.googleapis.com/minikube/releases/v1.16.0/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
    #     - mkdir -p $HOME/.kube $HOME/.minikube
    #     - touch "$KUBECONFIG"
    #     - sudo minikube start --profile=minikube --vm-driver=none --kubernetes-version=v1.20.1
    #     - minikube update-context --profile=minikube
    #     - "sudo chown -R travis: /home/travis/.minikube/"
    #     - eval "$(minikube docker-env --profile=minikube)" && export DOCKER_CLI='docker'
    #     # # TODO - rm and rely on push from docker repo, make type == PR
    #     # - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
    #     # - docker build -t shipasoftware/ketch:$TRAVIS_COMMIT .
    #     # - docker push shipasoftware/ketch:$TRAVIS_COMMIT
    #     # # Kubebuiler & Kustomize
    #     # - make install-kubebuilder KUBEBUILDER_INSTALL_DIR=/tmp/kubebuilder
    #     # - make install-kustomize KUSTOMIZE_INSTALL_DIR=/tmp
    #     # - export PATH=$PATH:/tmp
    #     # # Helm
    #     # - curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
    #     # - sudo apt-get install apt-transport-https --yes
    #     # - echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
    #     # - sudo apt-get update
    #     # - sudo apt-get install helm

    - stage: k3d
      sudo: required
      language: go
      go: 1.16.x
      services:
        - docker
      provider: script
      script:
        - bash scripts/install_kubectl.sh
        - bash scripts/install_k3d.sh
        - bash scripts/install_bats.sh
        - bash scripts/install_ketch.sh
